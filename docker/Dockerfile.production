# Multi-stage build for optimized production image
FROM docker.io/paritytech/ci-unified:bullseye-1.77.0-2024-04-10-v20240408 as builder

WORKDIR /pezkuwichain

# Copy dependency files first for better caching
COPY Cargo.toml Cargo.lock ./
COPY runtime/Cargo.toml ./runtime/
COPY node/Cargo.toml ./node/
COPY pallets/*/Cargo.toml ./pallets/*/

# Copy source code
COPY . .

# Build optimized release binary
RUN cargo build \
    --locked \
    --release \
    --features=pezkuwi-native \
    --bin pezkuwichain

# Strip debug symbols to reduce binary size
RUN strip target/release/pezkuwichain

# Runtime stage - minimal Ubuntu image
FROM ubuntu:22.04

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y \
        ca-certificates \
        curl \
        libssl3 \
        && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create pezkuwi user
RUN groupadd -r pezkuwi && \
    useradd -r -g pezkuwi -s /bin/false pezkuwi

# Copy binary from builder stage
COPY --from=builder /pezkuwichain/target/release/pezkuwichain /usr/local/bin/

# Create directories
RUN mkdir -p /data /chainspecs && \
    chown -R pezkuwi:pezkuwi /data /chainspecs

# Copy chainspecs (will be mounted in production)
COPY chainspecs/*.json /chainspecs/

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:9944/health || exit 1

# Expose ports
EXPOSE 30333 9933 9944 9615

# Set data volume
VOLUME ["/data"]

# Switch to non-root user
USER pezkuwi

# Default command
ENTRYPOINT ["/usr/local/bin/pezkuwichain"]
CMD ["--chain", "/chainspecs/pezkuwichain-production-raw.json", \
     "--base-path", "/data", \
     "--rpc-external", \
     "--rpc-cors", "all", \
     "--rpc-methods", "safe", \
     "--prometheus-external", \
     "--prometheus-port", "9615"]