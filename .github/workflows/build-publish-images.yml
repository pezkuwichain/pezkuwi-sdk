# GHA for build-*
name: Build and push images

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  merge_group:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
env:
  COMMIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}

jobs:
  #
  #
  #
  isdraft:
    uses: ./.github/workflows/reusable-isdraft.yml
  preflight:
    needs: isdraft
    uses: ./.github/workflows/reusable-preflight.yml

  ### Build ########################

  #
  #
  #
  build-linux-stable:
    needs: [preflight]
    runs-on: ${{ needs.preflight.outputs.RUNNER }}
    timeout-minutes: 60
    container:
      image: ${{ needs.preflight.outputs.IMAGE }}
    env:
      RUST_TOOLCHAIN: stable
      # Enable debug assertions since we are running optimized builds for testing
      # but still want to have debug assertions.
      RUSTFLAGS: "-Cdebug-assertions=y -Dwarnings"
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: build
        run: |
          forklift cargo build --locked --profile testnet --features pyroscope,fast-runtime --bin pezkuwi --bin pezkuwi-prepare-worker --bin pezkuwi-execute-worker
          ROCOCO_EPOCH_DURATION=10 ./pezkuwi/scripts/build-only-wasm.sh rococo-runtime $(pwd)/runtimes/rococo-runtime-10/
          ROCOCO_EPOCH_DURATION=100 ./pezkuwi/scripts/build-only-wasm.sh rococo-runtime $(pwd)/runtimes/rococo-runtime-100/
          ROCOCO_EPOCH_DURATION=600 ./pezkuwi/scripts/build-only-wasm.sh rococo-runtime $(pwd)/runtimes/rococo-runtime-600/
          pwd
          ls -alR runtimes
      - name: pack artifacts
        run: |
          mkdir -p ./artifacts
          VERSION="${{ needs.preflight.outputs.SOURCE_REF_SLUG }}" # will be tag or branch name
          mv ./target/testnet/pezkuwi ./artifacts/.
          mv ./target/testnet/pezkuwi-prepare-worker ./artifacts/.
          mv ./target/testnet/pezkuwi-execute-worker ./artifacts/.
          mv ./runtimes/ ./artifacts/.
          cd artifacts/
          sha256sum pezkuwi | tee pezkuwi.sha256
          shasum -c pezkuwi.sha256
          cd ../
          EXTRATAG="${{ needs.preflight.outputs.SOURCE_REF_SLUG }}-${COMMIT_SHA}"
          echo "Pezkuwi version = ${VERSION} (EXTRATAG = ${EXTRATAG})"
          echo -n ${VERSION} > ./artifacts/VERSION
          echo -n ${EXTRATAG} > ./artifacts/EXTRATAG
          echo -n ${GITHUB_RUN_ID} > ./artifacts/BUILD_LINUX_JOB_ID
          RELEASE_VERSION=$(./artifacts/pezkuwi -V | awk '{print $2}'| awk -F "-" '{print $1}')
          echo -n "v${RELEASE_VERSION}" > ./artifacts/BUILD_RELEASE_VERSION
          cp -r docker/* ./artifacts

      - name: tar
        run: tar -cvf artifacts.tar artifacts

      - name: upload artifacts
        uses: actions/upload-artifact@v5
        with:
          name: ${{ github.job }}-${{ needs.preflight.outputs.SOURCE_REF_SLUG }}
          path: artifacts.tar
          retention-days: 1

  #
  #
  #
  build-linux-stable-cumulus:
    needs: [preflight]
    runs-on: ${{ needs.preflight.outputs.RUNNER }}
    timeout-minutes: 60
    container:
      image: ${{ needs.preflight.outputs.IMAGE }}
    env:
      RUSTFLAGS: "-Cdebug-assertions=y -Dwarnings"
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: build
        run: |
          echo "___Building a binary, please refrain from using it in production since it goes with the debug assertions.___"
          forklift cargo build --release --locked -p pezkuwi-parachain-bin --bin pezkuwi-parachain
          echo "___Packing the artifacts___"
          mkdir -p ./artifacts
          mv ./target/release/pezkuwi-parachain ./artifacts/.
          echo "___The VERSION is either a tag name or the curent branch if triggered not by a tag___"
          echo ${{ needs.preflight.outputs.SOURCE_REF_SLUG }} | tee ./artifacts/VERSION

      - name: tar
        run: tar -cvf artifacts.tar artifacts

      - name: upload artifacts
        uses: actions/upload-artifact@v5
        with:
          name: ${{ github.job }}-${{ needs.preflight.outputs.SOURCE_REF_SLUG }}
          path: artifacts.tar
          retention-days: 1

  #
  #
  #
  build-test-parachain:
    needs: [preflight]
    runs-on: ${{ needs.preflight.outputs.RUNNER }}
    timeout-minutes: 60
    container:
      image: ${{ needs.preflight.outputs.IMAGE }}
    env:
      RUSTFLAGS: "-Cdebug-assertions=y -Dwarnings"
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: build
        run: |
          echo "___Building a binary, please refrain from using it in production since it goes with the debug assertions.___"
          forklift cargo build --release --locked -p cumulus-test-service --bin test-parachain
      - name: pack artifacts
        run: |
          echo "___Packing the artifacts___"
          mkdir -p ./artifacts
          mv ./target/release/test-parachain ./artifacts/.
          mkdir -p ./artifacts/zombienet
          mv ./target/release/wbuild/cumulus-test-runtime/wasm_binary_spec_version_incremented.rs.compact.compressed.wasm ./artifacts/zombienet/.

      - name: tar
        run: tar -cvf artifacts.tar artifacts

      - name: upload artifacts
        uses: actions/upload-artifact@v5
        with:
          name: ${{ github.job }}-${{ needs.preflight.outputs.SOURCE_REF_SLUG }}
          path: artifacts.tar
          retention-days: 1

  #
  #
  #
  build-test-collators:
    needs: [preflight]
    runs-on: ${{ needs.preflight.outputs.RUNNER }}
    timeout-minutes: 60
    container:
      image: ${{ needs.preflight.outputs.IMAGE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: build
        run: |
          forklift cargo build --locked --profile testnet -p test-parachain-adder-collator
          forklift cargo build --locked --profile testnet -p test-parachain-undying-collator
      - name: pack artifacts
        run: |
          mkdir -p ./artifacts
          mv ./target/testnet/adder-collator ./artifacts/.
          mv ./target/testnet/undying-collator ./artifacts/.
          echo -n "${{ needs.preflight.outputs.SOURCE_REF_SLUG }}" > ./artifacts/VERSION
          echo -n "${{ needs.preflight.outputs.SOURCE_REF_SLUG }}-${COMMIT_SHA}" > ./artifacts/EXTRATAG
          echo "adder-collator version = $(cat ./artifacts/VERSION) (EXTRATAG = $(cat ./artifacts/EXTRATAG))"
          echo "undying-collator version = $(cat ./artifacts/VERSION) (EXTRATAG = $(cat ./artifacts/EXTRATAG))"
          cp -r ./docker/* ./artifacts

      - name: tar
        run: tar -cvf artifacts.tar artifacts

      - name: upload artifacts
        uses: actions/upload-artifact@v5
        with:
          name: ${{ github.job }}-${{ needs.preflight.outputs.SOURCE_REF_SLUG }}
          path: artifacts.tar
          retention-days: 1

  #
  #
  #
  build-malus:
    needs: [preflight]
    runs-on: ${{ needs.preflight.outputs.RUNNER }}
    timeout-minutes: 60
    container:
      image: ${{ needs.preflight.outputs.IMAGE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: build
        run: |
          forklift cargo build --locked --profile testnet -p pezkuwi-test-malus --bin malus --bin pezkuwi-prepare-worker --bin pezkuwi-execute-worker
      - name: pack artifacts
        run: |
          mkdir -p ./artifacts
          mv ./target/testnet/malus ./artifacts/.
          mv ./target/testnet/pezkuwi-execute-worker ./artifacts/.
          mv ./target/testnet/pezkuwi-prepare-worker ./artifacts/.
          echo -n "${{ needs.preflight.outputs.SOURCE_REF_SLUG }}" > ./artifacts/VERSION
          echo -n "${{ needs.preflight.outputs.SOURCE_REF_SLUG }}-${COMMIT_SHA}" > ./artifacts/EXTRATAG
          echo "pezkuwi-test-malus = $(cat ./artifacts/VERSION) (EXTRATAG = $(cat ./artifacts/EXTRATAG))"
          cp -r ./docker/* ./artifacts

      - name: tar
        run: tar -cvf artifacts.tar artifacts

      - name: upload artifacts
        uses: actions/upload-artifact@v5
        with:
          name: ${{ github.job }}-${{ needs.preflight.outputs.SOURCE_REF_SLUG }}
          path: artifacts.tar
          retention-days: 1

  #
  #
  #
  build-linux-substrate:
    needs: [preflight]
    runs-on: ${{ needs.preflight.outputs.RUNNER }}
    timeout-minutes: 60
    container:
      image: ${{ needs.preflight.outputs.IMAGE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: build
        run: |
          mkdir -p ./artifacts/substrate/
          WASM_BUILD_NO_COLOR=1 forklift cargo build --locked --release -p staging-node-cli
          ls -la target/release/
      - name: pack artifacts
        shell: bash
        run: |
          mv target/release/substrate-node ./artifacts/substrate/substrate
          echo -n "Substrate version = "
          if [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
          echo "${{ github.ref_name }}" | tee ./artifacts/substrate/VERSION;
          else
          ./artifacts/substrate/substrate --version |
          cut -d ' ' -f 2 | tee ./artifacts/substrate/VERSION;
          fi
          sha256sum ./artifacts/substrate/substrate | tee ./artifacts/substrate/substrate.sha256
          cp -r ./docker/dockerfiles/substrate_injected.Dockerfile ./artifacts/substrate/

      - name: tar
        run: tar -cvf artifacts.tar artifacts

      - name: upload artifacts
        uses: actions/upload-artifact@v5
        with:
          name: ${{ github.job }}-${{ needs.preflight.outputs.SOURCE_REF_SLUG }}
          path: artifacts.tar
          retention-days: 1


  ### Build zombienet test artifacts ########################

  #
  #
  #
  prepare-bridges-zombienet-artifacts:
    needs: [preflight]
    runs-on: ${{ needs.preflight.outputs.RUNNER }}
    timeout-minutes: 60
    container:
      image: ${{ needs.preflight.outputs.IMAGE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: build
        run: |
          forklift cargo build --locked --profile testnet -p pezkuwi-test-malus --bin malus --bin pezkuwi-prepare-worker --bin pezkuwi-execute-worker
      - name: pack artifacts
        run: |
          mkdir -p ./artifacts/bridges-pezkuwi-sdk/bridges
          cp -r bridges/testing ./artifacts/bridges-pezkuwi-sdk/bridges/testing

      - name: tar
        run: tar -cvf artifacts.tar artifacts

      - name: upload artifacts
        uses: actions/upload-artifact@v5
        with:
          name: ${{ github.job }}-${{ needs.preflight.outputs.SOURCE_REF_SLUG }}
          path: artifacts.tar
          retention-days: 1

  #
  #
  #
  prepare-pezkuwi-zombienet-artifacts:
    needs: [preflight]
    runs-on: ${{ needs.preflight.outputs.RUNNER }}
    timeout-minutes: 60
    container:
      image: ${{ needs.preflight.outputs.IMAGE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: build
        run: |
          forklift cargo nextest --manifest-path pezkuwi/zombienet-sdk-tests/Cargo.toml archive --locked --features zombie-metadata,zombie-ci --archive-file pezkuwi-zombienet-tests.tar.zst
      - name: pack artifacts
        run: |
          mkdir -p artifacts
          cp pezkuwi-zombienet-tests.tar.zst ./artifacts

      - name: tar
        run: tar -cvf artifacts.tar artifacts

      - name: upload artifacts
        uses: actions/upload-artifact@v5
        with:
          name: ${{ github.job }}-${{ needs.preflight.outputs.SOURCE_REF_SLUG }}
          path: artifacts.tar
          retention-days: 1

  #
  #
  #
  prepare-cumulus-zombienet-artifacts:
    needs: [preflight]
    runs-on: ${{ needs.preflight.outputs.RUNNER }}
    timeout-minutes: 60
    container:
      image: ${{ needs.preflight.outputs.IMAGE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: build
        run: |
          forklift cargo nextest --manifest-path cumulus/zombienet/zombienet-sdk/Cargo.toml archive --locked --features zombie-ci --archive-file cumulus-zombienet-tests.tar.zst
      - name: pack artifacts
        run: |
          mkdir -p artifacts
          cp cumulus-zombienet-tests.tar.zst ./artifacts

      - name: tar
        run: tar -cvf artifacts.tar artifacts

      - name: upload artifacts
        uses: actions/upload-artifact@v5
        with:
          name: ${{ github.job }}-${{ needs.preflight.outputs.SOURCE_REF_SLUG }}
          path: artifacts.tar
          retention-days: 1

  ### Publish ########################

  #
  #
  #
  build-push-image-test-parachain:
    needs: [preflight, build-test-parachain]
    runs-on: ${{ needs.preflight.outputs.RUNNER_DEFAULT }}
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - uses: actions/download-artifact@v6
        with:
          name: build-test-parachain-${{ needs.preflight.outputs.SOURCE_REF_SLUG }}

      - name: tar
        run: tar -xvf artifacts.tar

      - name: build and push image
        uses: ./.github/actions/build-push-image
        with:
          image-name: "europe-docker.pkg.dev/parity-ci-2024/temp-images/test-parachain"
          dockerfile: "docker/dockerfiles/test-parachain_injected.Dockerfile"

  #
  #
  #
  build-push-image-pezkuwi-debug:
    needs: [preflight, build-linux-stable]
    runs-on: ${{ needs.preflight.outputs.RUNNER_DEFAULT }}
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - uses: actions/download-artifact@v6
        with:
          name: build-linux-stable-${{ needs.preflight.outputs.SOURCE_REF_SLUG }}

      - name: tar
        run: tar -xvf artifacts.tar

      - name: build and push image
        uses: ./.github/actions/build-push-image
        with:
          image-name: "europe-docker.pkg.dev/parity-ci-2024/temp-images/pezkuwi-debug"
          dockerfile: "docker/dockerfiles/pezkuwi/pezkuwi_injected_debug.Dockerfile"

  #
  #
  #
  build-push-image-colander:
    needs: [preflight, build-test-collators]
    runs-on: ${{ needs.preflight.outputs.RUNNER_DEFAULT }}
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - uses: actions/download-artifact@v6
        with:
          name: build-test-collators-${{ needs.preflight.outputs.SOURCE_REF_SLUG }}

      - name: tar
        run: tar -xvf artifacts.tar

      - name: build and push image
        uses: ./.github/actions/build-push-image
        with:
          image-name: "europe-docker.pkg.dev/parity-ci-2024/temp-images/colander"
          dockerfile: "docker/dockerfiles/collator_injected.Dockerfile"

  #
  #
  #
  build-push-image-malus:
    needs: [preflight, build-malus]
    runs-on: ${{ needs.preflight.outputs.RUNNER_DEFAULT }}
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - uses: actions/download-artifact@v6
        with:
          name: build-malus-${{ needs.preflight.outputs.SOURCE_REF_SLUG }}

      - name: tar
        run: tar -xvf artifacts.tar

      - name: build and push image
        uses: ./.github/actions/build-push-image
        with:
          image-name: "europe-docker.pkg.dev/parity-ci-2024/temp-images/malus"
          dockerfile: "docker/dockerfiles/malus_injected.Dockerfile"

  #
  #
  #
  build-push-image-substrate-pr:
    needs: [preflight, build-linux-substrate]
    runs-on: ${{ needs.preflight.outputs.RUNNER_DEFAULT }}
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - uses: actions/download-artifact@v6
        with:
          name: build-linux-substrate-${{ needs.preflight.outputs.SOURCE_REF_SLUG }}

      - name: tar
        run: tar -xvf artifacts.tar

      - name: build and push image
        uses: ./.github/actions/build-push-image
        with:
          image-name: "europe-docker.pkg.dev/parity-ci-2024/temp-images/substrate"
          dockerfile: "docker/dockerfiles/substrate_injected.Dockerfile"

  #
  #
  #
  # unlike other images, bridges+zombienet image is based on Zombienet image that pulls required binaries
  # from other fresh images (pezkuwi and cumulus)
  build-push-image-bridges-zombienet-tests:
    needs:
      [
        preflight,
        build-linux-stable,
        build-linux-stable-cumulus,
        prepare-bridges-zombienet-artifacts,
      ]
    runs-on: ${{ needs.preflight.outputs.RUNNER_DEFAULT }}
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - uses: actions/download-artifact@v6
        with:
          name: build-linux-stable-${{ needs.preflight.outputs.SOURCE_REF_SLUG }}
      - name: tar
        run: |
          tar -xvf artifacts.tar
          rm artifacts.tar

      - uses: actions/download-artifact@v6
        with:
          name: build-linux-stable-cumulus-${{ needs.preflight.outputs.SOURCE_REF_SLUG }}
      - name: tar
        run: |
          tar -xvf artifacts.tar
          rm artifacts.tar

      - uses: actions/download-artifact@v6
        with:
          name: prepare-bridges-zombienet-artifacts-${{ needs.preflight.outputs.SOURCE_REF_SLUG }}
      - name: tar
        run: |
          tar -xvf artifacts.tar
          rm artifacts.tar

      - name: build and push image
        uses: ./.github/actions/build-push-image
        with:
          image-name: "europe-docker.pkg.dev/parity-ci-2024/temp-images/bridges-zombienet-tests"
          dockerfile: "docker/dockerfiles/bridges_zombienet_tests_injected.Dockerfile"

  #
  #
  #
  build-push-image-pezkuwi-parachain-debug:
    needs: [preflight, build-linux-stable-cumulus]
    runs-on: ${{ needs.preflight.outputs.RUNNER_DEFAULT }}
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - uses: actions/download-artifact@v6
        with:
          name: build-linux-stable-cumulus-${{ needs.preflight.outputs.SOURCE_REF_SLUG }}

      - name: tar
        run: tar -xvf artifacts.tar

      - name: build and push image
        uses: ./.github/actions/build-push-image
        with:
          image-name: "europe-docker.pkg.dev/parity-ci-2024/temp-images/pezkuwi-parachain-debug"
          dockerfile: "docker/dockerfiles/pezkuwi-parachain/pezkuwi-parachain-debug_unsigned_injected.Dockerfile"
