[package]
name = "pezkuwi-service"
rust-version = "1.60"
version = "23.0.0"
authors.workspace = true
edition.workspace = true
license.workspace = true
description = "Utils to tie different Pezkuwi components together and allow instantiation of a node."
homepage.workspace = true
repository.workspace = true

[lints]
workspace = true

[dependencies]
frame-benchmarking-cli.default-features = true
frame-benchmarking-cli.workspace = true
frame-benchmarking.default-features = true
frame-benchmarking.workspace = true
frame-metadata-hash-extension = { optional = true, workspace = true, default-features = true }
frame-system-rpc-runtime-api.default-features = true
frame-system-rpc-runtime-api.workspace = true
frame-system.default-features = true
frame-system.workspace = true
mmr-gadget.default-features = true
mmr-gadget.workspace = true
pallet-transaction-payment-rpc-runtime-api.default-features = true
pallet-transaction-payment-rpc-runtime-api.workspace = true
pallet-transaction-payment.default-features = true
pallet-transaction-payment.workspace = true
prometheus-endpoint.default-features = true
prometheus-endpoint.workspace = true
sc-authority-discovery.default-features = true
sc-authority-discovery.workspace = true
sc-basic-authorship.default-features = true
sc-basic-authorship.workspace = true
sc-chain-spec.default-features = true
sc-chain-spec.workspace = true
sc-client-api.default-features = true
sc-client-api.workspace = true
sc-consensus-babe.default-features = true
sc-consensus-babe.workspace = true
sc-consensus-beefy.default-features = true
sc-consensus-beefy.workspace = true
sc-consensus-grandpa.default-features = true
sc-consensus-grandpa.workspace = true
sc-consensus-slots.default-features = true
sc-consensus-slots.workspace = true
sc-consensus.default-features = true
sc-consensus.workspace = true
sc-executor.default-features = true
sc-executor.workspace = true
sc-keystore.default-features = true
sc-keystore.workspace = true
sc-network-sync.default-features = true
sc-network-sync.workspace = true
sc-network.default-features = true
sc-network.workspace = true
sc-offchain.default-features = true
sc-offchain.workspace = true
sc-service.workspace = true
sc-sync-state-rpc.default-features = true
sc-sync-state-rpc.workspace = true
sc-sysinfo.default-features = true
sc-sysinfo.workspace = true
sc-telemetry.default-features = true
sc-telemetry.workspace = true
sc-transaction-pool-api.default-features = true
sc-transaction-pool-api.workspace = true
sc-transaction-pool.default-features = true
sc-transaction-pool.workspace = true
sp-api.default-features = true
sp-api.workspace = true
sp-authority-discovery.default-features = true
sp-authority-discovery.workspace = true
sp-block-builder.default-features = true
sp-block-builder.workspace = true
sp-blockchain.default-features = true
sp-blockchain.workspace = true
sp-consensus-babe.default-features = true
sp-consensus-babe.workspace = true
sp-consensus-beefy.default-features = true
sp-consensus-beefy.workspace = true
sp-consensus-grandpa.default-features = true
sp-consensus-grandpa.workspace = true
sp-consensus.default-features = true
sp-consensus.workspace = true
sp-core.default-features = true
sp-core.workspace = true
sp-genesis-builder.default-features = true
sp-genesis-builder.workspace = true
sp-inherents.default-features = true
sp-inherents.workspace = true
sp-io.default-features = true
sp-io.workspace = true
sp-keyring.default-features = true
sp-keyring.workspace = true
sp-mmr-primitives.default-features = true
sp-mmr-primitives.workspace = true
sp-offchain.default-features = true
sp-offchain.workspace = true
sp-runtime.default-features = true
sp-runtime.workspace = true
sp-session.default-features = true
sp-session.workspace = true
sp-timestamp.default-features = true
sp-timestamp.workspace = true
sp-transaction-pool.default-features = true
sp-transaction-pool.workspace = true
sp-version.default-features = true
sp-version.workspace = true
sp-weights.default-features = true
sp-weights.workspace = true

# External Crates
async-trait = { workspace = true }
codec = { workspace = true, default-features = true }
futures = { workspace = true }
gum.default-features = true
gum.workspace = true
is_executable = { workspace = true }
kvdb = { workspace = true }
kvdb-rocksdb = { optional = true, workspace = true }
log = { workspace = true, default-features = true }
parity-db = { optional = true, workspace = true }
parking_lot = { workspace = true, default-features = true }
pezkuwi-approval-distribution = { optional = true, workspace = true, default-features = true }
pezkuwi-availability-bitfield-distribution = { optional = true, workspace = true, default-features = true }
pezkuwi-availability-distribution = { optional = true, workspace = true, default-features = true }
pezkuwi-availability-recovery = { optional = true, workspace = true, default-features = true }
pezkuwi-collator-protocol = { optional = true, workspace = true, default-features = true }
pezkuwi-core-primitives.default-features = true
pezkuwi-core-primitives.workspace = true
pezkuwi-dispute-distribution = { optional = true, workspace = true, default-features = true }
pezkuwi-gossip-support = { optional = true, workspace = true, default-features = true }
pezkuwi-network-bridge = { optional = true, workspace = true, default-features = true }
pezkuwi-node-collation-generation = { optional = true, workspace = true, default-features = true }
pezkuwi-node-core-approval-voting = { optional = true, workspace = true, default-features = true }
pezkuwi-node-core-approval-voting-parallel = { optional = true, workspace = true, default-features = true }
pezkuwi-node-core-av-store = { optional = true, workspace = true, default-features = true }
pezkuwi-node-core-backing = { optional = true, workspace = true, default-features = true }
pezkuwi-node-core-bitfield-signing = { optional = true, workspace = true, default-features = true }
pezkuwi-node-core-candidate-validation = { optional = true, workspace = true, default-features = true }
pezkuwi-node-core-chain-api = { optional = true, workspace = true, default-features = true }
pezkuwi-node-core-chain-selection = { optional = true, workspace = true, default-features = true }
pezkuwi-node-core-dispute-coordinator = { optional = true, workspace = true, default-features = true }
pezkuwi-node-core-parachains-inherent.default-features = true
pezkuwi-node-core-parachains-inherent.workspace = true
pezkuwi-node-core-prospective-parachains = { optional = true, workspace = true, default-features = true }
pezkuwi-node-core-provisioner = { optional = true, workspace = true, default-features = true }
pezkuwi-node-core-pvf = { optional = true, workspace = true, default-features = true }
pezkuwi-node-core-pvf-checker = { optional = true, workspace = true, default-features = true }
pezkuwi-node-core-runtime-api = { optional = true, workspace = true, default-features = true }
pezkuwi-node-network-protocol.default-features = true
pezkuwi-node-network-protocol.workspace = true
pezkuwi-node-primitives.default-features = true
pezkuwi-node-primitives.workspace = true
pezkuwi-node-subsystem-types.default-features = true
pezkuwi-node-subsystem-types.workspace = true
pezkuwi-node-subsystem-util.default-features = true
pezkuwi-node-subsystem-util.workspace = true
pezkuwi-node-subsystem.default-features = true
pezkuwi-node-subsystem.workspace = true
pezkuwi-overseer.default-features = true
pezkuwi-overseer.workspace = true
pezkuwi-primitives.default-features = true
pezkuwi-primitives.workspace = true
pezkuwi-rpc.default-features = true
pezkuwi-rpc.workspace = true
pezkuwi-runtime-parachains.default-features = true
pezkuwi-runtime-parachains.workspace = true
pezkuwi-statement-distribution = { optional = true, workspace = true, default-features = true }
rococo-runtime = { optional = true, workspace = true }
pezkuwichain = { path = "../../runtime/pezkuwichain", optional = true }
rococo-runtime-constants = { optional = true, workspace = true, default-features = true }
serde = { features = ["derive"], workspace = true, default-features = true }
serde_json = { workspace = true, default-features = true }
thiserror = { workspace = true }
westend-runtime = { optional = true, workspace = true }
westend-runtime-constants = { optional = true, workspace = true, default-features = true }
xcm-runtime-apis.default-features = true
xcm-runtime-apis.workspace = true
xcm.default-features = true
xcm.workspace = true

[dev-dependencies]
assert_matches = { workspace = true }
pezkuwi-node-subsystem-test-helpers = { workspace = true }
pezkuwi-primitives-test-helpers = { workspace = true }
pezkuwi-test-client = { workspace = true }
sp-tracing = { default-features = false, workspace = true }
tempfile = { workspace = true }

[features]
default = ["db", "full-node"]

db = ["sc-service/rocksdb"]

full-node = [
	"kvdb-rocksdb",
	"parity-db",
	"pezkuwi-approval-distribution",
	"pezkuwi-availability-bitfield-distribution",
	"pezkuwi-availability-distribution",
	"pezkuwi-availability-recovery",
	"pezkuwi-collator-protocol",
	"pezkuwi-dispute-distribution",
	"pezkuwi-gossip-support",
	"pezkuwi-network-bridge",
	"pezkuwi-node-collation-generation",
	"pezkuwi-node-core-approval-voting",
	"pezkuwi-node-core-approval-voting-parallel",
	"pezkuwi-node-core-av-store",
	"pezkuwi-node-core-backing",
	"pezkuwi-node-core-bitfield-signing",
	"pezkuwi-node-core-candidate-validation",
	"pezkuwi-node-core-chain-api",
	"pezkuwi-node-core-chain-selection",
	"pezkuwi-node-core-dispute-coordinator",
	"pezkuwi-node-core-prospective-parachains",
	"pezkuwi-node-core-provisioner",
	"pezkuwi-node-core-pvf",
	"pezkuwi-node-core-pvf-checker",
	"pezkuwi-node-core-runtime-api",
	"pezkuwi-statement-distribution",
]

# Configure the native runtimes to use.
westend-native = [
	"frame-metadata-hash-extension",
	"westend-runtime",
	"westend-runtime-constants",
]
rococo-native = [
	"frame-metadata-hash-extension",
	"rococo-runtime",
	"rococo-runtime-constants",
]

pezkuwi-native = [
	"frame-metadata-hash-extension",
	"pezkuwichain",
]

# Generate the metadata hash needed for CheckMetadataHash
# in the test runtimes.

metadata-hash = [
	"rococo-runtime?/metadata-hash",
	"westend-runtime?/metadata-hash",
	"pezkuwichain?/metadata-hash",
]

runtime-benchmarks = [
	"frame-benchmarking-cli/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-transaction-payment/runtime-benchmarks",
	"pezkuwi-primitives/runtime-benchmarks",
	"pezkuwi-runtime-parachains/runtime-benchmarks",
	"pezkuwi-test-client/runtime-benchmarks",
	"pezkuwichain?/runtime-benchmarks",
	"rococo-runtime?/runtime-benchmarks",
	"sc-service/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"westend-runtime?/runtime-benchmarks",
	"xcm-runtime-apis/runtime-benchmarks",
	"xcm/runtime-benchmarks",
]
try-runtime = [
	"frame-system/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pezkuwi-runtime-parachains/try-runtime",
	"rococo-runtime?/try-runtime",
	"sp-runtime/try-runtime",
	"westend-runtime?/try-runtime",
]
fast-runtime = [
	"rococo-runtime?/fast-runtime",
	"westend-runtime?/fast-runtime",
	"pezkuwichain?/fast-runtime",
]

malus = ["full-node"]
runtime-metrics = [
	"pezkuwi-runtime-parachains/runtime-metrics",
	"rococo-runtime?/runtime-metrics",
	"westend-runtime?/runtime-metrics",
]
